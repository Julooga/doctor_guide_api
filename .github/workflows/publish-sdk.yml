name: Publish SDK to GitHub Packages

on:
  workflow_dispatch:
#   push:
#     branches:
#       - main
#     paths:
#       - 'src/sdk/**'
#       - '.github/workflows/publish-sdk.yml'
#       - 'package.json'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read # 소스 코드를 체크아웃하기 위해 필요
      packages: write # GitHub Packages에 패키지를 게시하기 위해 필요

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Generate SDK
        run: pnpm build:api

      - name: Bump patch version
        run: |
          VERSION=$(jq -r '.version' sdk/package.json)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          jq --arg v "$NEW_VERSION" '.version = $v' sdk/package.json > dist/package.tmp.json
          mv sdk/package.tmp.json sdk/package.json

      - name: Publish to GitHub Packages
        run: |
          # sdk 디렉토리에 .npmrc 파일 생성
          echo "@julooga:registry=https://npm.pkg.github.com/" > sdk/.npmrc
          echo "//npm.pkg.github.com/:_authToken=\${NODE_AUTH_TOKEN}" >> sdk/.npmrc

          cd sdk
          # .npmrc 파일에서 레지스트리 정보가 이미 설정되었으므로 --registry 플래그는 생략 가능하나, 유지해도 무방합니다.
          pnpm publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
